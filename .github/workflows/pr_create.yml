name: Docker Image hackathon kitty

on:
  pull_request:
    branches: [ master ]

env:
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Set releaase
      run: |
        echo "GITHUB_ORG="$(echo ${GITHUB_REPOSITORY} | sed 's/\/docker-.*//' ) >> $GITHUB_ENV
        echo "GITHUB_REPO="$(echo ${GITHUB_REPOSITORY} | sed 's/.*\/docker-//' ) >> $GITHUB_ENV
        echo "GITHUB_SHA=${GITHUB_SHA}" >> $GITHUB_ENV
        cat $GITHUB_ENV

    - name: Checkout repository
      # https://github.com/actions/checkout
      uses: actions/checkout@v2

    - name: Log in to the Container registry
      # https://github.com/docker/login-action
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Docker Buildx
      # https://github.com/docker/setup-buildx-action
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: Build and push
      # https://github.com/docker/build-push-action
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./prometheus/golang/Dockerfile
        push: true
        tags: |
          ghcr.io/${{env.GITHUB_ORG}}/${{env.GITHUB_REPO}}:${{env.GITHUB_SHA}}
          ghcr.io/${{env.GITHUB_ORG}}/${{env.GITHUB_REPO}}:scan

    # - name: Pull the Docker image to prevent Sysdig actions from panicking
    #   run: docker pull "ghcr.io/${{env.GITHUB_ORG}}/${{env.GITHUB_REPO}}:${{env.GITHUB_SHA}}"

    # - name: Scan image
    #   # https://github.com/marketplace/actions/sysdig-secure-inline-scan
    #   # https://sysdig.com/blog/image-scanning-github-actions/
    #   uses: sysdiglabs/scan-action@v3
    #   with:
    #     # image-tag: "ghcr.io/${{env.GITHUB_ORG}}/${{env.GITHUB_REPO}}:scan"
    #     image-tag: "ghcr.io/${{env.GITHUB_ORG}}/${{env.GITHUB_REPO}}:${{env.GITHUB_SHA}}"
    #     sysdig-secure-token: ${{ secrets.SYSDIG_SECURE }}
    #     sysdig-secure-url: https://eu1.app.sysdig.com
    #     input-type: docker-daemon
    #     run-as-user: root
    #     dockerfile-path: "./Dockerfile"
